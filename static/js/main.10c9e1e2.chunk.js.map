{"version":3,"sources":["Button.js","NestedList.js","List.js","index.js"],"names":["Button","props","index","active","type","switcher","useState","checkbox","checkboxSwitch","className","onClick","console","log","NestedList","i","nested","sections","options","radioActive","radioActiveSwitch","list","liText","listItem","Number","isInteger","checkIfRadioActive","isButton","item","checkNested","Object","keys","length","push","data-group-name","caption","Fragment","List","listItems","listName","mainList","1","2","3","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAmBeA,EAjBA,SAACC,GAAW,IACpBC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,SADF,EAESC,mBAAS,aAFlB,mBAEnBC,EAFmB,KAETC,EAFS,KAaxB,OAAQ,qBAAKC,UAAW,OAASL,EAAO,KAAgB,UAATA,EAAmBD,EAASI,GAC/DG,QAVZ,WACEC,QAAQC,IAAIV,GACH,UAATE,EAAmBC,EAASH,GAIDM,EAAd,cAAbD,EAA0C,SAA2B,iBCiE1DM,MAzEf,SAASA,EAAWZ,GAClB,IAAIa,EAAIb,EAAMC,MACVa,EAASd,EAAMc,OACfC,EAAWD,EAAOC,SAClBC,EAAUF,EAAOE,QAJI,EAKgBX,oBAAU,GAL1B,mBAKlBY,EALkB,KAKLC,EALK,OAMQb,mBAAS,IANjB,mBAQrBc,GARqB,UAQd,IAOX,SAASC,EAAOC,GACd,OAAOC,OAAOC,WAAWF,GAAY,GAAKA,EAG5C,SAASjB,EAASS,GAEdK,EADEL,IAAMI,GACW,EAEDJ,GAKtB,SAASW,EAAmBX,GAC1B,OAAOA,IAAOI,EAAc,SAAW,YAIzC,SAASQ,EAASC,EAAMb,GACtB,GAAoB,kBAATa,GAA8B,OAATA,EAC9B,OAAO,cAAC,EAAD,CACSzB,MAAOY,EACPX,OAAQsB,EAAmBX,GAC3BV,KAAMa,EAAQb,KACdC,SAAWA,GAJNS,GASzB,SAASc,EAAYD,EAAMb,GACzB,MAAoB,kBAATa,GAA8B,OAATA,GAA8C,IAA7BE,OAAOC,KAAKH,GAAMI,OAC1D,oBAAItB,UAAU,aAAd,SAA2B,6BAAI,kDACb,kBAATkB,GAA8B,OAATA,GACrCb,GAAK,IACE,oBAAIL,UAAU,aAAd,SAA2B,cAACI,EAAD,CAAoBX,MAAOY,EAAE,IAAKC,OAAQY,GAAzBb,WAF9C,EAYT,IAAK,IAAIQ,KAAYN,EACnBF,IACAM,EAAKY,KAAK,qBAAIvB,UAAyC,kBAAvBO,EAASM,IAA2B,QAA1D,UACPI,EAASV,EAASM,GAAWR,GAC9B,sBAAMmB,kBAnDDhB,EAAQiB,SAAW,GAmDxB,SAA4Cb,EAAOC,KAClDM,EAAYZ,EAASM,GAAWR,OAIrC,OAAQ,cAAC,IAAMqB,SAAP,UACGf,KCEEgB,MAtEf,WAEE,IAAIC,EAAY,CACdC,SAAU,yCACVC,SAAU,CACRtB,QAAS,CACPiB,QAAS,kBACT9B,KAAM,SAERY,SAAU,CACRwB,EAAG,CACDvB,QAAS,CACPiB,QAAS,iBACT9B,KAAM,YAERY,SAAU,CACJ,IAAM,EACN,WAAa,EACb,UAAc,CACVC,QAAS,CACPiB,QAAS,oBACT9B,KAAM,YAERY,SAAU,CACR,WAAa,EACb,QAAU,EACV,OAAS,EACT,yBAAY,EACZ,QAAU,IAGhB,mBAAe,CACXC,QAAS,CACPiB,QAAS,oBACT9B,KAAM,YAERY,SAAU,CACR,aAAa,EACb,oBAAoB,EACpB,cAAc,EACd,mBAAmB,EACnB,YAAY,MAI1ByB,EAAG,GACHC,EAAG,GACH,cAAgB,KAKtB,OAAQ,cAAC,IAAMP,SAAP,UACN,oBAAI1B,UAAU,YAAd,SACE,+BACE,cAAC,EAAD,CAAQL,KAAK,WAELF,MAAM,MACNC,OAAO,SACPE,SAAW,kBAAM,IAHb,QAKZ,+BAAOgC,EAAUC,WACjB,oBAAI7B,UAAU,aAAd,SACE,cAAC,EAAD,CAAYP,MAAO,EAAGa,OAAQsB,EAAUE,qBChElDI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.10c9e1e2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Button = (props) => {\r\n  let {index, active, type, switcher} = props\r\n  let [checkbox, checkboxSwitch] = useState(\"collapsed\")\r\n\r\n  function switchButton() {\r\n    console.log(index)\r\n    type === \"radio\" ? switcher(index) : checkboxIsActive()\r\n  }\r\n\r\n  function checkboxIsActive() {\r\n    checkbox === \"collapsed\" ? checkboxSwitch(\"unfold\") : checkboxSwitch(\"collapsed\")\r\n  }\r\n\r\n  return (<div className={\"btn \" + type + \" \" + (type === \"radio\" ? active : checkbox)} \r\n              onClick={switchButton}></div>)\r\n}\r\n\r\nexport default Button","import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport './List.css';\r\n\r\nfunction NestedList(props) {\r\n  let i = props.index\r\n  let nested = props.nested\r\n  let sections = nested.sections\r\n  let options = nested.options\r\n  const [radioActive, radioActiveSwitch] = useState(-1)\r\n  const [liClass, liClassChange] = useState(\"\")\r\n \r\n  let list = []\r\n\r\n  // set data attribute\r\n  function dataGroupName() {\r\n    return options.caption || \"\"\r\n  }\r\n\r\n  function liText(listItem) {\r\n    return Number.isInteger(+listItem) ? \"\" : listItem \r\n  }\r\n\r\n  function switcher(i) {\r\n    if (i === radioActive) {\r\n      radioActiveSwitch(-1)\r\n    } else {\r\n      radioActiveSwitch(i)\r\n    }\r\n    // console.log(radioActive)\r\n  }\r\n\r\n  function checkIfRadioActive(i) {\r\n    return i ===  radioActive ? \"unfold\" : \"collapsed\"\r\n  }\r\n\r\n\r\n  function isButton(item, i) {\r\n    if (typeof item === 'object' && item !== null) {\r\n      return <Button  key={i}\r\n                      index={i}\r\n                      active={checkIfRadioActive(i)}\r\n                      type={options.type}\r\n                      switcher={ switcher }\r\n              />\r\n    }\r\n  }\r\n\r\n  function checkNested(item, i) {\r\n    if (typeof item === 'object' && item !== null && Object.keys(item).length === 0) {\r\n      return <ul className=\"nestedList\"><li><span>Empty list</span></li></ul>\r\n    } else if (typeof item === 'object' && item !== null) {\r\n      i += 100\r\n      return <ul className=\"nestedList\"><NestedList key={i} index={i+100} nested={item} /></ul>\r\n    }\r\n  }\r\n\r\n  function liAnimating(i) {\r\n    if (i <= liClass && i >= liClass){\r\n      setTimeout( () => \"animate\", 300) \r\n    }\r\n  }\r\n\r\n  for (let listItem in sections) {\r\n    i++\r\n    list.push(<li className={typeof sections[listItem] === \"object\"  && \"group\"}>\r\n      {isButton(sections[listItem], i)}\r\n      <span data-group-name={ dataGroupName() }>{ liText(listItem) }</span>\r\n      {checkNested(sections[listItem], i)}\r\n      </li>)\r\n  }\r\n\r\n  return (<React.Fragment>\r\n            {list}\r\n          </React.Fragment>)\r\n}\r\n\r\nexport default NestedList","import React from 'react';\nimport './List.css';\nimport NestedList from './NestedList';\nimport Button from './Button';\n\nfunction List() {\n\n  let listItems = {\n    listName: \"Nagłówek drzewa wielowierszowy\",\n    mainList: { \n      options: {\n        caption: \"Poddodział\",\n        type: \"radio\",\n      },\n      sections: {\n        1: {\n          options: {\n            caption: \"Zespół\",\n            type: \"checkbox\",\n          },\n          sections: {\n                \"HR\": false,\n                \"Marketing\": false,\n                \"Analitycy\":  {\n                    options: {\n                      caption: \"Podzespół\",\n                      type: \"checkbox\",\n                    },\n                    sections: {\n                      \"Kalendarz\": false,\n                      \"Kokpit\": false,\n                      \"Widok\": false,\n                      \"Różności\": false,\n                      \"Szukaj\": false\n                    }\n                },\n                \"Programiści\": {\n                    options: {\n                      caption: \"Podzespół\",\n                      type: \"checkbox\",\n                    },\n                    sections: {\n                      \"Front-end\": false,\n                      \"Middle-front-end\": false,\n                      \"Middle-end\": false,\n                      \"Middle-back-end\": false,\n                      \"Back-end\": false\n                    },   \n                },\n          }},\n        2: {},\n        3: {},\n        \"Niezrzeszeni\": false\n      },\n    },\n  }\n\n  return (<React.Fragment>\n    <ul className=\"main-list\">\n      <li>\n        <Button type=\"checkbox\" \n                key=\"1000\"\n                index=\"-10\"\n                active=\"unfold\"\n                switcher={ () => false }\n                />\n        <span>{listItems.listName}</span>\n        <ul className=\"nestedList\">\n          <NestedList index={0} nested={listItems.mainList} />\n        </ul>\n      </li>\n    </ul>\n    </React.Fragment>)\n}\n\nexport default List;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport List from './List';\n\nReactDOM.render(\n  <React.StrictMode>\n    <List />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}