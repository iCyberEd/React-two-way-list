[{"C:\\my_webdev\\recruiting-task\\two-way-list\\list\\src\\index.js":"1","C:\\my_webdev\\recruiting-task\\two-way-list\\list\\src\\List.js":"2","C:\\my_webdev\\recruiting-task\\two-way-list\\list\\src\\NestedList.js":"3","C:\\my_webdev\\recruiting-task\\two-way-list\\list\\src\\Button.js":"4"},{"size":200,"mtime":1615176899434,"results":"5","hashOfConfig":"6"},{"size":2008,"mtime":1615176616793,"results":"7","hashOfConfig":"6"},{"size":2098,"mtime":1615229418778,"results":"8","hashOfConfig":"6"},{"size":590,"mtime":1615176747655,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"in6cjq",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\my_webdev\\recruiting-task\\two-way-list\\list\\src\\index.js",[],["20","21"],"C:\\my_webdev\\recruiting-task\\two-way-list\\list\\src\\List.js",[],"C:\\my_webdev\\recruiting-task\\two-way-list\\list\\src\\NestedList.js",["22","23"],"import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport './List.css';\r\n\r\nfunction NestedList(props) {\r\n  let i = props.index\r\n  let nested = props.nested\r\n  let sections = nested.sections\r\n  let options = nested.options\r\n  const [radioActive, radioActiveSwitch] = useState(-1)\r\n  const [liClass, liClassChange] = useState(\"\")\r\n \r\n  let list = []\r\n\r\n  // set data attribute\r\n  function dataGroupName() {\r\n    return options.caption || \"\"\r\n  }\r\n\r\n  function liText(listItem) {\r\n    return Number.isInteger(+listItem) ? \"\" : listItem \r\n  }\r\n\r\n  function switcher(i) {\r\n    if (i === radioActive) {\r\n      radioActiveSwitch(-1)\r\n    } else {\r\n      radioActiveSwitch(i)\r\n    }\r\n    // console.log(radioActive)\r\n  }\r\n\r\n  function checkIfRadioActive(i) {\r\n    return i ===  radioActive ? \"unfold\" : \"collapsed\"\r\n  }\r\n\r\n\r\n  function isButton(item, i) {\r\n    if (typeof item === 'object' && item !== null) {\r\n      return <Button  key={i}\r\n                      index={i}\r\n                      active={checkIfRadioActive(i)}\r\n                      type={options.type}\r\n                      switcher={ switcher }\r\n              />\r\n    }\r\n  }\r\n\r\n  function checkNested(item, i) {\r\n    if (typeof item === 'object' && item !== null && Object.keys(item).length === 0) {\r\n      return <ul className=\"nestedList\"><li><span>Empty list</span></li></ul>\r\n    } else if (typeof item === 'object' && item !== null) {\r\n      i += 100\r\n      return <ul className=\"nestedList\"><NestedList key={i} index={i+100} nested={item} /></ul>\r\n    }\r\n  }\r\n\r\n  function liAnimating(i) {\r\n    if (i <= liClass && i >= liClass){\r\n      setTimeout( () => \"animate\", 300) \r\n    }\r\n  }\r\n\r\n  for (let listItem in sections) {\r\n    i++\r\n    list.push(<li className={typeof sections[listItem] === \"object\"  && \"group\"}>\r\n      {isButton(sections[listItem], i)}\r\n      <span data-group-name={ dataGroupName() }>{ liText(listItem) }</span>\r\n      {checkNested(sections[listItem], i)}\r\n      </li>)\r\n  }\r\n\r\n  return (<React.Fragment>\r\n            {list}\r\n          </React.Fragment>)\r\n}\r\n\r\nexport default NestedList","C:\\my_webdev\\recruiting-task\\two-way-list\\list\\src\\Button.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":11,"column":19,"nodeType":"30","messageId":"31","endLine":11,"endColumn":32},{"ruleId":"28","severity":1,"message":"32","line":58,"column":12,"nodeType":"30","messageId":"31","endLine":58,"endColumn":23},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"no-unused-vars","'liClassChange' is assigned a value but never used.","Identifier","unusedVar","'liAnimating' is defined but never used.","no-global-assign","no-unsafe-negation"]